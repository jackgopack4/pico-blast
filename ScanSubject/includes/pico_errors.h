// Error codes and their meanings generated from c:/svn/software/source/pico_errors.cpp
//'#define NO_ADD_ERRORS_CPP' // to prevent declaration of PicoErrors_log, Interpret, & FullError.

#ifndef _pico_errors_FILE_INCLUDED
#define _pico_errors_FILE_INCLUDED

#define NO_GSTRING_ERRORS

#define PICO_FULL_ERRORS_IN_SRC
char *PicoErrors_ShowOSerror(char *bufP, int bufSize);

enum {XSEVERITY_NOERROR, XSEVERITY_INFORMATION, XSEVERITY_HINT, XSEVERITY_WARNING, XSEVERITY_DANGEROUS, XSEVERITY_ERROR, XSEVERITY_SYSTEM, XSEVERITY_CATASTROPHIC};
#define WARNING_AND_INFORMATION_ERRNUMS 1561,1581,7017,7018,7021,7022,7023,7050,7124,7155,7156,7170,7192,7204,7206,7209,7214,7223,7254,7303,7319,7333,7350,7357,7380,7381,7381,7452,7516,7517,7518,7519
#define ERR_0001    1 //Unknown error
#define ERR_0003    3 //File or directory not found (%s)
#define ERR_0005    5 //Not enough memory (%s)
#define ERR_0997  997 //Feature not supported in this release %s.
#define ERR_0998  998 //Error in external 
#define ERR_1000 1000 //Error Number %s specified twice.
#define ERR_1001 1001 //Missing error 'number=' or 'summary=' field.
#define ERR_1002 1002 //Invalid digits in error number field (%s).
#define ERR_1003 1003 //Unbalanced quotes in a string: %s
#define ERR_1004 1004 //Unable to find --> or < or > found in comment.
#define ERR_1030 1030 /// * found without * / in a comment, or unbalanced quotes in a string: %s
#define ERR_1032 1032 //Duplicate parameter name: %s
#define ERR_1033 1033 //Syntax error in $directive .... 
#define ERR_1034 1034 //Unknown $directive
#define ERR_1035 1035 //Unable to find $endif corresponding to this $if %s.
#define ERR_1036 1036 //$if ... , $set ... , $reset ...  directive inside $if  ....$endif (%s).
#define ERR_1037 1037 //$endif or $else found without corresponding $if ...  (%s).
#define ERR_1038 1038 //Variable in $if(%s)  is not found in a $define directive or formal parameter list.
#define ERR_1039 1039 //missing name in $directive (%s).
#define ERR_1040 1040 //File has already been included (%s)
#define ERR_1045 1045 //Invalid attribute in %s tag
#define ERR_1046 1046 //< found without a corresponding > in an XML node
#define ERR_1047 1047 //> found without a corresponding <
#define ERR_1048 1048 //<!-- found without --> in an XML comment
#define ERR_1095 1095 //Invalid characters in define macro '%s'
#define ERR_1096 1096 //Incomplete parameter list for define ... %s
#define ERR_1097 1097 //Invalid characters in define macro parameter '%s'
#define ERR_1159 1159 //Syntax error processing %s.
#define ERR_1379 1379 //Invalid & directive in XML.
#define ERR_1380 1380 //Unacceptable child element (%s) in XML group.
#define ERR_1405 1405 //Missing label.
#define ERR_1406 1406 //Missing close quote in string constant.
#define ERR_1407 1407 //Missing semicolon in command: %s.
#define ERR_1408 1408 //Invalid option to Copy command in WizardCommands.txt: %s.
#define ERR_1498 1498 //Error in call to Pico Computing Server %s.
#define ERR_1500 1500 //Error in hostname or portname to Pico_ipXface.
#define ERR_1501 1501 //Incorrect package sequence in TFTP message.
#define ERR_1502 1502 //TFTP server has returned an error packet.
#define ERR_1503 1503 //TFTP Error unknown
#define ERR_1504 1504 //TFTP Error file not found
#define ERR_1505 1505 //TFTP Error access
#define ERR_1506 1506 //TFTP Error target device full
#define ERR_1507 1507 //TFTP Error illegal op
#define ERR_1508 1508 //TFTP Error illegal port number
#define ERR_1509 1509 //TFTP Error file_exists
#define ERR_1510 1510 //Unable to obtain buffer to send Ethernet message.
#define ERR_1526 1526 //Incorrect syntax of field name: %s
#define ERR_1530 1530 //No Response from MRC-200.
#define ERR_1531 1531 //No Response to ARP generated by MRC-200 charger board
#define ERR_1545 1545 //Data not properly written to SecSci.
#define ERR_1546 1546 //Data for SecSci is not properly formatted.
#define ERR_1547 1547 //%s Ip addresses are inconsistent.
#define ERR_1548 1548 //Error creating MRC-200.cfg file.
#define ERR_1549 1549 //Error Processing MRC-200.cfg file.
#define ERR_1550 1550 //Error accessing flash ROM on MRC-200.
#define ERR_1551 1551 //Error interfacing with flash ROM on MRC-200.
#define ERR_1552 1552 //Protocol error accessing MRC-200.
#define ERR_1553 1553 //Timeout transferring data to remote card.
#define ERR_1554 1554 //Module not found.
#define ERR_1555 1555 //Unable to obtain allocation information for flash ROM.
#define ERR_1556 1556 //Sector was not erased.
#define ERR_1557 1557 //Error capturing data from MRC-200.
#define ERR_1558 1558 //Board already has a serial number: %s.
#define ERR_1559 1559 //Multiple occurrences of file: %s.
#define ERR_1560 1560 //Incorrect password for flash access.
#define ERR_1561 1561 //Remember to change Maintenance Mode switch to '%s' before rebooting.
#define ERR_1562 1562 //File download module not present in bitfile.
#define ERR_1563 1563 //Transfer incomplete.
#define ERR_1564 1564 //File Checksum error.
#define ERR_1565 1565 //Header fields has invalid format.
#define ERR_1566 1566 //Buffer is too small to perform requested operation.
#define ERR_1567 1567 //Error updating variable %s.
#define ERR_1568 1568 //Timeout waiting for sent data on TCP/IP socket
#define ERR_1569 1569 //AwaitSendPacket cannot be called from inside an interrupt.
#define ERR_1570 1570 //Error accessing flash
#define ERR_1571 1571 //PA signal temperature greater than PaOverTemp
#define ERR_1572 1572 //VSWR is too large
#define ERR_1573 1573 //Radio's drawing current, P/A is not
#define ERR_1574 1574 //An I2C device did not respond properly
#define ERR_1575 1575 //no information returned from PA
#define ERR_1576 1576 //internal batteries are too low
#define ERR_1577 1577 //missing internal battery
#define ERR_1578 1578 //BIT failure (multiple sources)
#define ERR_1579 1579 //MRC-200.cfg has errors.
#define ERR_1580 1580 //P/A is drawing large current (stuck in transmit)
#define ERR_1581 1581 //Running on internal batteries
#define ERR_1582 1582 //Timeout waiting for data from Power Amplifier.
#define ERR_1583 1583 //Flash Parameters are unknown.
#define ERR_1590 1590 //I2C device %s is babbling
#define ERR_1591 1591 //Not data returned on I2C device %s
#define ERR_1592 1592 //Invalid script command:%s
#define ERR_1593 1593 //Unknown variable:%s
#define ERR_1594 1594 //Error reading/writing variable to charger board:%s
#define ERR_1601 1601 //Unable to find UDP channel to communicate with MRC-200.
#define ERR_1602 1602 //RS232 test has failed.
#define ERR_1603 1603 //Unable to create process thread.
#define ERR_1604 1604 //Unable to open %s port.
#define ERR_1605 1605 //Invalid com port settings.
#define ERR_1606 1606 //Error accessing specified com port.
#define ERR_1792 1792 //User defined error in preprocessor: %s
#define ERR_1800 1800 //Error starting Sockets
#define ERR_1801 1801 //Timeout waiting for data on TCP/IP socket
#define ERR_1803 1803 //TCP/IP connection gracefully closed
#define ERR_1804 1804 //Syntax error in command string to TCP / UDP driver
#define ERR_1805 1805 //Terminating sockets interface
#define ERR_1806 1806 //Unable to find unicast address to support multicast group
#define ERR_1807 1807 //Unable to start sockets.
#define ERR_1808 1808 //Error connecting a socket %s
#define ERR_1809 1809 //Device type parameter is illegal.
#define ERR_1810 1810 //Unable to create a socket.
#define ERR_1811 1811 //Missing delimiter in hostName/serviceName field.
#define ERR_1812 1812 //Unable to resolve host name (%s) to an IP address.
#define ERR_1813 1813 //Unable to resolve service name to an IP port address.
#define ERR_1814 1814 //Unable to create a process to handle UDP access.
#define ERR_1815 1815 //Error encountered reading a socket.
#define ERR_1816 1816 //Error encountered writing a socket.
#define ERR_1817 1817 //Error binding socket to local address.
#define ERR_1818 1818 //Unable to join multicast group.
#define ERR_1819 1819 //Error setting a socket to broadcast mode.
#define ERR_1820 1820 //Missing or invalid destination address for Route Add: %s
#define ERR_7000 7000 //Flash ROM has no primary image
#define ERR_7001 7001 //Files are missing in Flash ROM directory
#define ERR_7002 7002 //Notice: Do you wish to write a backup of the primary image
#define ERR_7003 7003 //E-12 Pico card is operating in degraded mode.
#define ERR_7004 7004 //Error reading remote file system.
#define ERR_7005 7005 //Uncorrectable error reading remote file:
#define ERR_7009 7009 //Pico Card is not ready:
#define ERR_7010 7010 //Flash ROM not ready when expected.
#define ERR_7011 7011 //Error reading Pico Card Configuration information.
#define ERR_7012 7012 //Incorrect signature in %s registers.
#define ERR_7013 7013 //I/O access to AER register failed self test.
#define ERR_7014 7014 //Attrib memory access to AER register failed self test.
#define ERR_7015 7015 //The text 'Pico Computing' was not found in the manufacturer section of attrib memory.
#define ERR_7016 7016 //Data delivered from JTAG spy FIFO is not in the expected sequence.
#define ERR_7017 7017 //BAR registers have incorrect values.
#define ERR_7018 7018 //File %s also linked to BackupBoot.bit
#define ERR_7019 7019 //File %s cannot be linked to this file.
#define ERR_7020 7020 //Serial number cannot be written without a valid primary image .
#define ERR_7021 7021 //Cannot find linked file %s
#define ERR_7022 7022 //File %s Loaded because of AlwaysLoad property of PrimaryBoot.bit.
#define ERR_7023 7023 //RAM test will appear to stall.
#define ERR_7036 7036 //File does not checksum %s.
#define ERR_7037 7037 //Error deleting file %s.
#define ERR_7038 7038 //Error deleting directory %s.
#define ERR_7050 7050 //Pico.sys is running in debug mode.
#define ERR_7100 7100 //Unable to find systemRoot in environment.
#define ERR_7101 7101 //Error reported by operating system:
#define ERR_7102 7102 //Error in compilation (%s).
#define ERR_7104 7104 //Attempt to load .chm file failed: %s
#define ERR_7105 7105 //Error deleting registry key: %s
#define ERR_7106 7106 //Error accessing Pico Card:
#define ERR_7107 7107 //Error reported by operating system:
#define ERR_7108 7108 //Error reported by operating system:
#define ERR_7109 7109 //Unable to open driver %s
#define ERR_7110 7110 //Unable to reboot.
#define ERR_7111 7111 //Reboot port did not signal completion.
#define ERR_7112 7112 //Unknown or wrong image loaded.
#define ERR_7113 7113 //Tuple in '%s' not present.
#define ERR_7114 7114 //CIS in '%s' has errors.
#define ERR_7115 7115 //Unable to read CIS.
#define ERR_7116 7116 //Unable to write CIS to file.
#define ERR_7117 7117 //Flash Status bit is misbehaving.
#define ERR_7118 7118 //External program already active.
#define ERR_7119 7119 //Flash ROM did not enter CFI mode correctly: %s.
#define ERR_7120 7120 //Unable to read file: %s.
#define ERR_7121 7121 //Unable to write CIS to card.
#define ERR_7122 7122 //Unable to write to flash memory.
#define ERR_7123 7123 //FPGA image does not return proper signature.
#define ERR_7124 7124 //Pico.sys did not load correctly.
#define ERR_7125 7125 //Unable to find file for command line request: %s.
#define ERR_7126 7126 //Primary must be .bin or .bit file: %s.
#define ERR_7127 7127 //Space is not available in file header for the changes requested: %s.
#define ERR_7128 7128 //File does not have the proper header: %s.
#define ERR_7129 7129 //Formatted output from keyhole caused system failure.
#define ERR_7130 7130 //Error writing flash ROM: %s.
#define ERR_7131 7131 //Nothing to save.
#define ERR_7132 7132 //Error Opening: file %s.
#define ERR_7133 7133 //File is not an FPGA image file (.bit or .bin).
#define ERR_7134 7134 //Image %s does not have keyhole interface.
#define ERR_7135 7135 //File %s has errors and been removed.
#define ERR_7136 7136 //Pico Card to PC Keyhole protocol error.
#define ERR_7137 7137 //Error deleting file %s.
#define ERR_7138 7138 //Sector reference is invalid
#define ERR_7139 7139 //Elf or data file %s has improper size.
#define ERR_7140 7140 //Error accessing driver.
#define ERR_7141 7141 //Unable to find Xilinx signature (FF FF FF FF AA 99 55 66) in file %s.
#define ERR_7142 7142 //Notes exceed sector size.
#define ERR_7143 7143 //Primary boot file not found at logical sector 2.
#define ERR_7144 7144 //Error reading file: %s.
#define ERR_7145 7145 //Invalid File: %s.
#define ERR_7146 7146 //Invalid file signature: %s.
#define ERR_7147 7147 //Unable to create file %s.
#define ERR_7148 7148 //Unable to locate backup image.
#define ERR_7149 7149 //Unable to create primary file %s.
#define ERR_7150 7150 //Failed verify of %s.
#define ERR_7151 7151 //Updated files is not the same size as the file being replaced: %s.
#define ERR_7152 7152 //Unable to allocate space on flash ROM for file: %s.
#define ERR_7153 7153 //ELF file %s does not have proper signature.
#define ERR_7154 7154 //Unable to find a primary boot file in %s.
#define ERR_7155 7155 //No data returned from Pico Card.
#define ERR_7156 7156 //Incompatible version (non fatal): %s.
#define ERR_7157 7157 //Incompatible version (fatal): %s.
#define ERR_7158 7158 //Dump file is invalid: %s.
#define ERR_7159 7159 //Erase of flashROM sector timed out: %s.
#define ERR_7160 7160 //Error reading flash ROM.
#define ERR_7161 7161 //Error writing PC file %s.
#define ERR_7162 7162 //Error Reading Flash ROM (%s)
#define ERR_7163 7163 //Primary boot file is improperly located: %s.
#define ERR_7164 7164 //%s is a readonly file.
#define ERR_7165 7165 //Error reading file %s.
#define ERR_7166 7166 //CIS data does not meet consistency checks.
#define ERR_7167 7167 //Invalid data in CIS.
#define ERR_7168 7168 //Missing END marker (0xFF) in CIS data.
#define ERR_7169 7169 ///src/ not found in source file name:%s
#define ERR_7170 7170 //Last tuple in Configuration is not the last tuple entry.
#define ERR_7171 7171 //Error: Multiple linking tuples in CIS chain.
#define ERR_7172 7172 //Duplicate Card Configuration tuple.
#define ERR_7173 7173 //MFC CIS has only one linked tuple.
#define ERR_7174 7174 //Files are identical in a update request.
#define ERR_7175 7175 //File sizes are different in an update request
#define ERR_7176 7176 //Invalid environment setting
#define ERR_7177 7177 //invalid IoCtl buffer size
#define ERR_7178 7178 //Error accessing driver
#define ERR_7179 7179 //PCMCIA Error: unsupported ioctl code
#define ERR_7180 7180 //Missing close quotes in a string parameter: %s.
#define ERR_7181 7181 //Unknown command in a message to the Pico Card: %s.
#define ERR_7182 7182 //Number and type of parameter is inconsistent with command: %s.
#define ERR_7183 7183 //Expression has invalid syntax.
#define ERR_7184 7184 //Missing close parenthesis ) in an expression: %s.
#define ERR_7185 7185 //Contiguous space required for bit image could not be found.
#define ERR_7186 7186 //Space required for primary boot image is already occupied by %s.
#define ERR_7187 7187 //Space required for backup boot image is already occupied by %s.
#define ERR_7188 7188 //Space required for backup boot image is already occupied by %s.
#define ERR_7189 7189 //invalid element in an expression.
#define ERR_7190 7190 //duplicate filename in flash ROM directory: %s
#define ERR_7191 7191 //Invalid character in file name: %s
#define ERR_7192 7192 //User cancelled
#define ERR_7193 7193 //Information only.
#define ERR_7194 7194 //Flash file name and PC file name must be the same type: %s
#define ERR_7195 7195 //Pico Card is not ready or not running a primary image.
#define ERR_7196 7196 //Board at address %s is not available.
#define ERR_7196 7196 //%s Card is not available.
#define ERR_7197 7197 //Pico Card setting (/i) not available on simulated file (/z).
#define ERR_7198 7198 //Feature (%s) is not available in this release.
#define ERR_7199 7199 //Feature (%s) is not available on this hardware.
#define ERR_7200 7200 //Waited too long for reply from Keyhole Test program.
#define ERR_7201 7201 //ELF file does not handle this file type.
#define ERR_7202 7202 //The file '%s' must be an elf file (.elf).
#define ERR_7203 7203 //Invalid header on ELF file.
#define ERR_7204 7204 //Process on PPC finished.
#define ERR_7205 7205 //Invalid Entry address in ELF file
#define ERR_7206 7206 //PPC program has terminated (information).
#define ERR_7207 7207 //Flash ROM has been changed by another program.
#define ERR_7208 7208 //Pico Card has been rebooted.
#define ERR_7209 7209 //Program %s started.
#define ERR_7210 7210 //PPC Timeout waiting for input from PC; input status=%s.
#define ERR_7211 7211 //No input received from PC; input fifo status=%s.
#define ERR_7212 7212 //PPC command (%s) to PC timed out.
#define ERR_7213 7213 //PPC Out of sequence. Received word count=%s
#define ERR_7214 7214 //Keyhole services limited (%s).
#define ERR_7215 7215 //Command to KeyholeTest.elf is incorrect. Command=%s
#define ERR_7216 7216 //Capability not found : %s.
#define ERR_7217 7217 //Error in Kprintf on PPC.
#define ERR_7218 7218 //Unable to locate file KeyholeTest.elf.
#define ERR_7219 7219 //RAM test failed with %s error(s).
#define ERR_7220 7220 //RAM address is outside memory available on Pico Card.
#define ERR_7221 7221 //File must be type BIT to be rebooted; found to be of type %s.
#define ERR_7222 7222 //File must be type ELF to be executed.
#define ERR_7223 7223 //File size rounded up to %s bytes (ie. multiple of physical sector size)
#define ERR_7230 7230 //Unable to load linked file
#define ERR_7231 7231 //Unexpected exit from a loaded program
#define ERR_7234 7234 //Linked file not found
#define ERR_7250 7250 //Unable to add another custom tool
#define ERR_7251 7251 //Command field in a custom tool does not refer to a valid program name: %s
#define ERR_7252 7252 //directory specified by a custom tool or wizard is not valid: %s
#define ERR_7253 7253 //Unable to find %s in path.
#define ERR_7254 7254 //Should be exactly one build.bat file near specified binary file.
#define ERR_7255 7255 //Invalid script command:%s
#define ERR_7290 7290 //Unable to locate :%s
#define ERR_7291 7291 //Unable to locate entry point '%s' in 
#define ERR_7292 7292 //Unacceptable version of: %s
#define ERR_7293 7293 //OS error loading 
#define ERR_7294 7294 //OS error loading DLL: %s.
#define ERR_7295 7295 //Incorrect side-by-side directories for Visual Studio Express
#define ERR_7296 7296 //Invalid file name: %s
#define ERR_7297 7297 //Write Permission denied: %s
#define ERR_7298 7298 //Unable to determine name of current image.
#define ERR_7299 7299 //Unacceptable serial number: %s.
#define ERR_7300 7300 //Bad parameter.
#define ERR_7301 7301 //Pico Failed Installation Write test.
#define ERR_7302 7302 //Pico Failed Installation Read test.
#define ERR_7303 7303 //E-12 card is operating in hobbled mode.
#define ERR_7304 7304 //Not connected to a Pico Card.
#define ERR_7305 7305 //Please select exactly one file for this operation.
#define ERR_7306 7306 //Unable to find help file: %s
#define ERR_7307 7307 //DCMs failed to lock.
#define ERR_7308 7308 //Pico signature not found in firmware.
#define ERR_7309 7309 //Powerdown rejected because another application has the device driver open.
#define ERR_7310 7310 //Error powering down JTAG device.
#define ERR_7311 7311 //Error powering up JTAG device.
#define ERR_7312 7312 //Error powering down Pico device .
#define ERR_7313 7313 //Error powering up Pico device .
#define ERR_7314 7314 //Error powering down MF device .
#define ERR_7315 7315 //Error powering up MF device .
#define ERR_7316 7316 //Current FPGA file (%s) does not provide JTAG spy.
#define ERR_7317 7317 //Attempt to write a read only channel %s
#define ERR_7318 7318 //Attempt to read a write only channel %s
#define ERR_7319 7319 //Pico card is opened in read only mode: %s
#define ERR_7320 7320 //Pico card or simulation file is opened in read only mode.
#define ERR_7330 7330 //Bus Master interface not ready.
#define ERR_7331 7331 //Bus Master counter test register did not increment properly.
#define ERR_7332 7332 //Bus Master Read or Write to counter register failed.
#define ERR_7333 7333 //Interrupts are not operational. System is dropping back to non interrupt mode.
#define ERR_7334 7334 //Data error in Bus Master counter test.
#define ERR_7335 7335 //Bus Master status register did not return proper signature.
#define ERR_7336 7336 //Bus Master timeout test did not return the correct number of bytes.
#define ERR_7337 7337 //Bus Master interrupt not specified.
#define ERR_7338 7338 //Bus Master interrupt not received at the expected rate.
#define ERR_7339 7339 //Bus Master did not timeout correctly.
#define ERR_7340 7340 //Unable to determine number of JTAG devices or number of devices is incorrect.
#define ERR_7341 7341 //Invalid scan location provided to the function PicoXface::JtagGetIdCode().
#define ERR_7342 7342 //Incorrect ID code returned from device %s on JTAG chain.
#define ERR_7343 7343 //Too many open channels.
#define ERR_7344 7344 //Unable to open channel.
#define ERR_7345 7345 //Unable to set channel number.
#define ERR_7350 7350 //Board is unserialized.
#define ERR_7351 7351 //Board does not have model number information in secure sector.
#define ERR_7352 7352 //Serial number cannot be written without a valid primary image .
#define ERR_7353 7353 //FPGA file is not a valid bit file or is not compatible with the FPGA model (%s) on the Pico Card.
#define ERR_7354 7354 //Unable to read the part number from the JTAG port.
#define ERR_7355 7355 //data in secure sector conflicts with current data and cannot be updated.
#define ERR_7356 7356 //data did not update secure sector correctly.
#define ERR_7357 7357 //Unable to determine FPGA model. Action Performed notwithstanding.
#define ERR_7358 7358 //Unknown variable name:%s
#define ERR_7380 7380 //Clearing RAM before initiating a program will make dump considerably faster
#define ERR_7381 7381 //Debug switches are not implement in release version of Pico.ko
#define ERR_7381 7381 //Debug switches are not implement in release version of Pico.sys
#define ERR_7400 7400 //Directory name is invalid or too short (three characters): %s
#define ERR_7401 7401 //Unable to find or create specified directory: %s
#define ERR_7402 7402 //Non empty directory already exists: %s
#define ERR_7403 7403 //Type field must be three or four characters in length: %s
#define ERR_7404 7404 //Invalid command in WizardCommand.txt: %s
#define ERR_7450 7450 //Error in PLX chip interface, function=%s.
#define ERR_7451 7451 //DONE did not go high after sending configuration bitstream
#define ERR_7452 7452 //E-16 FPGA is not loaded.
#define ERR_7453 7453 //INIT didn't go inactive when PROG was driven low
#define ERR_7454 7454 //INIT didn't go high after PROG was driven high
#define ERR_7455 7455 //gpio state unexpected:%s
#define ERR_7456 7456 //Error from PlxPci.sys:%s
#define ERR_7457 7457 //PLX_CHANNEL0_DONE not asserted when writing FPGA load information:%s
#define ERR_7458 7458 //Pico.sys was unable to locate the PCI bridge.
#define ERR_7459 7459 //Error Accessing EEprom on E-16 card
#define ERR_7460 7460 //Error Loading FPGA
#define ERR_7461 7461 //Error Loading FPGA
#define ERR_7500 7500 //No compatible pico card found!
#define ERR_7501 7501 //Bluetooth maximum pin length exceeded
#define ERR_7502 7502 //Missing imported information file
#define ERR_7503 7503 //Missing user defined information addresses
#define ERR_7504 7504 //No Pico Card
#define ERR_7505 7505 //File is not a valid .zip file
#define ERR_7506 7506 //unable to find encrypted files in (%s).zip!
#define ERR_7507 7507 //Unable to find password.
#define ERR_7508 7508 //No dictionary selected.
#define ERR_7509 7509 //Unable to identify the PSK from the dictionary file.
#define ERR_7510 7510 //Encrypted file not selected.
#define ERR_7511 7511 //Specified SSID and the SSID in the output file do not match.
#define ERR_7512 7512 //Unable to open capture file.
#define ERR_7513 7513 //End of pcap capture file.
#define ERR_7514 7514 //Invalid word length.
#define ERR_7515 7515 //Found a record that was too short.
#define ERR_7516 7516 //Invalid passphrase length.
#define ERR_7517 7517 //No BSSID selected.
#define ERR_7518 7518 //Please select only one dictionary name to change.
#define ERR_7519 7519 //No PicoCard found. Using PC for cracks.
#define ERR_7520 7520 //Cannot connect to internet. Email notification cannot be sent.
#define ERR_7521 7521 //SMTP error.
#define ERR_8000 8000 //ReadPLX8111Regs failed to seek
#define ERR_8001 8001 //ReadPLX8111Regs failed to read
#define ERR_8002 8002 //GetPicoConfig failed to do ioctl.
#define ERR_8003 8003 //FindPico didn't find any matching cards
#define ERR_8004 8004 //Couldn't open .bit file '%s'
#define ERR_8005 8005 //BitFileFPGAType couldn't read from .bit file %s
#define ERR_8006 8006 //BitFileFPGAType: file doesn't look like a .bit file: %s
#define ERR_8007 8007 //PICO_CONFIG argument is NULL.
#define ERR_8008 8008 //Incompatible .bit file in LoadFPGA. Refusing to load.
#define ERR_8009 8009 //Insufficient buffer size given to BitFileFPGAType.
#define ERR_8010 8010 //Configuration data transfer (DMA) timed out.
#define ERR_8011 8011 //Driver doesn't support slot queries. Unable to determine the Pico's slot.
#define ERR_8012 8012 //Insufficient buffer space provided for slot string. Unable to report the Pico's slot.
#define ERR_8013 8013 //Unfamiliar FPGA type for .bit file %s
#define ERR_8014 8014 //All compatible Pico cards are in use.
#define ERR_8015 8015 //BitFileFPGAType doesn't have enough buffer space to handle this .bit file: %s.
#define ERR_8016 8016 //Specified UserClk doesn't exist.
#define ERR_8017 8017 //Can't generate requested frequency.
#define ERR_8018 8018 //Invalid DCM multiply or divide parameter.
#define ERR_8019 8019 //DCM failed to lock at requested clock speed.
#define ERR_8020 8020 //Couldn't read from .bit file '%s'
#define ERR_8021 8021 //The .bit file is invalid: %s
#define ERR_8022 8022 //The .bit file is invalid: %s
#define ERR_9999 9999 //Not an error
// added by hand
#define ERR_1003 1003
#define ERR_1004 1004
#define ERR_1005 1005
#define ERR_1006 1006
#define ERR_1010 1010
#define ERR_1020 1020
#define ERR_1021 1021
#define ERR_8023 8023
#define ERR_8024 8024
#define ERR_9100 9100
#define ERR_9101 9101
#define ERR_9102 9102
#define ERR_9103 9103
#define ERR_9104 9104
#define ERR_9105 9105
#define ERR_9106 9106
#define ERR_9011 9011
#define ERR_10000 10000
#define ERR_10005 10005
#define ERR_10006 10006
#define ERR_10007 10007
#define ERR_10008 10008
#define ERR_10009 10009
#define ERR_10010 10010
#define ERR_10011 10011
#define ERR_10012 10012
#define ERR_10013 10013
#define ERR_10014 10014
#define ERR_10015 10015 //Couldn't re-allocate the interrupt after an FPGA reload without hotswapping.
#define ERR_10016 10016
#define ERR_10017 10017
#define ERR_10018 10018
#define ERR_10019 10019
#define ERR_10020 10020
#define ERR_10021 10021
// 15000 - 15999 reserved CBO : we are blocking out these numbers to make space for an application overlay to exist in this same space

// errors specific to software-driven simulation
#define ERR_11009 11009 // couldn't remove file
#define ERR_11010 11010 // couldn't close file
#define ERR_11011 11011
#define ERR_11012 11012
#define ERR_11013 11013
#define ERR_11014 11014
#define ERR_11015 11015
#define ERR_11016 11016
#define ERR_11017 11017
#define ERR_11018 11018
#define ERR_11020 11020
#define ERR_11021 11021
#define ERR_11022 11022
#define ERR_11023 11023
#define ERR_11026 11026
#define ERR_11029 11029
#define ERR_11031 11031
#define ERR_11032 11032
#define ERR_11033 11033
#define ERR_11034 11034
#define ERR_11035 11035
#define ERR_11036 11036
#define ERR_11037 11037
#define ERR_11038 11038
#define ERR_11039 11039
#define ERR_11040 11040
#define ERR_11041 11041

static const int MAX_ERROR_PARAM_SIZE=1024,
                 MAX_ERROR_MESSAGE_SIZE=1024*2;

#ifndef NO_ADD_ERRORS_CPP
 #ifndef pico_errors_FUNCS_INCLUDED
  #define pico_errors_FUNCS_INCLUDED
  void   PicoErrors_Clear           (void);
  #ifdef __cplusplus
   int   PicoErrors_GetLastErrorInfo(char **paramPP=(char**)0, char **contextPP=(char**)0, int erri=-1);
  #else
   int   PicoErrors_GetLastErrorInfo(char **paramPP, char **contextPP, int erri);
  #endif
  int    PicoErrors_Severity        (int erC);
  void   PicoErrors_FileName        (const char* fileNameP);
  #ifndef NO_ERRORL
   #ifdef __cplusplus
     int PicoErrors_log  (int erC, const char* contextP=(const char *) "" , const char* parmP=(const char *) "");
   #else
     int PicoErrors_log  (int erC, const char* contextP, const char*);
   #endif //__cplusplus
  #endif
  const char  *PicoErrors_Interpret(int erC, char *resultP, int resultSize);
  #ifdef PICO_FULL_ERRORS_IN_SRC
   const char *PicoErrors_FullError(int erC, char *resultP, int resultSize);
  #else
   const char *PicoErrors_FullError(int erC, const char *fileNameP, char *resultP, int resultSize);
  #endif
  #ifndef NO_GSTRING_ERRORS
   #include <gstring.h>
   #ifdef __cplusplus
     cGString PicoErrors_Interpret(int erC=0);
     cGString PicoErrors_FullError(int erC=0, const char* fileNameP=NULL);
   #else
     cGString PicoErrors_Interpret(int erC);
     cGString PicoErrors_FullError(int erC, const char* fileNameP);
   #endif //__cplusplus
   void     PicoErrors_AddContext (const char *msgP);
  #endif //NO_GSTRING_ERRORS
 #endif //pico_errors_FUNCS_INCLUDED
#endif //NO_ADD_ERRORS_CPP
#endif //_pico_errors_FILE_INCLUDED
//End of file...
